app.version=1.0.0

#spring.datasource.url=jdbc:postgresql://aws-1-us-east-1.pooler.supabase.com:6543/postgres
#spring.datasource.username=postgres.qqhaxudmcbztqtiqrayu
#spring.datasource.password=proyectoACOP
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}


# Propiedad para forzar la revalidación de la conexión al finalizar la transacción.

# Esto suele resolver el problema de 'prepared statement already exists'.

spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED


# Propiedades clave para el error 'S_1'

spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.data-source-properties.prepareThreshold=0



spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC


logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.data=DEBUG

# CONFIGURACIÓN DE INTELIGENCIA ARTIFICIAL
ai.gemini.api-key=${GEMINI_API_KEY}

# Server
server.port=8081